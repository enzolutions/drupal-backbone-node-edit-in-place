<?php

/**
 * Implements hook_help().
 */
function backbone_node_edit_in_place_help($path, $arg) {
  switch ($path) {
    case 'admin/help#backbone_example':
      return t("An example Backbone.js app, which mainly showcases node loading and rendering.");
  }
}

/**
 * Implements hook_menu().
 *
 * Our app needs a place to live, so we create a menu callback for it
 */
function backbone_node_edit_in_place_menu() {
  $items['backbone_node_edit_in_place'] = array(
    'title' => 'Backbone Node Edit In-Place',
    'description' => 'A basic Backbone Drupal app.',
    'page callback' => 'backbone_node_edit_in_place_admin_page',
    'access arguments' => array('administer content'),
    'weight' => 0,
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Set up the app templates, js and container div.
 *
 * This is a pretty minimal function, since all our page needs to contain is an
 * anchor div for our app to attach to and the correct templates and JavaScript
 * files to run it.  We use backbone_add_template to include all templates in
 * the code, and, as noted in the hook_theme documentation we use theme
 * functions to generate all templates.
 *
 * @return Array
 *   A render array for the tag of the app container.
 */
function backbone_node_edit_in_place_admin_page() {

  // Load our library
  $editinplace = libraries_load('backbone-editinplace');
  // If we can't find our library, notify the user.
  if (!empty($editinplace['error'])) {
    $message = 'backbone-editinplace library not found, please download the production version
               (backbone.editinplace.js) from <a href="@download">@download</a> and place
               it in the sites/all/libraries/backbone-editinplace/ directory then clear cache.';
    drupal_set_message(t($message, array('@download' => url($editinplace['download url']))), 'error');
    return '';
  }

  // Add backbone.js to page.
  drupal_add_library('backbone_services', 'drupalbackbone-services');

  // Add templates to page.
  backbone_add_template('backbone-node-edit-in-place-app-template', theme('backbone_node_edit_in_place_app_template'));
  // Add app js.
  drupal_add_js(drupal_get_path('module', 'backbone_node_edit_in_place') . '/js/backbone_node_edit_in_place_app.js');
  // Return a container div for the app to anchor itself to.
  return array(
    '#type' => 'html_tag',
    '#tag' => 'div',
    '#attributes' => array(
      'id' => 'backbone-node-edit-in-place-app',
    ),
  );
}

/**
 * Implements hook_theme().
 */
function backbone_node_edit_in_place_theme($existing, $type, $theme, $path) {
  return array(
    'backbone_node_edit_in_place_app_template' => array(
      'template' => 'backbone-node-edit-in-place-app-template',
      'variables' => array(),
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function backbone_node_edit_in_place_libraries_info() {
  // Register the backbone-editinplace library
  $libraries['backbone-editinplace'] = array(
    'name' => 'backbone-editinplace',
    'vendor url' => 'http://fatiherikli.github.io/backbone-editinplace/',
    'download url' => 'https://raw.github.com/fatiherikli/backbone-editinplace/master/src/backbone.editinplace.js',
    'version callback' => 'backbone_node_edit_in_place_get_version',
    'files' => array(
      'js' => array('backbone.editinplace.js'),
    ),
  );
  return $libraries;
}

function backbone_node_edit_in_place_get_version($library) {
  return 1.0;
}
